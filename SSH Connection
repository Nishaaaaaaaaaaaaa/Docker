SSH Connection
Ping the machine 2 with machine 1 using the ip address of machine 1.
Ping <ip address of machine 1>
ping 192.168.136.128

Ctr+c
Enter command in Machine 2 –
ssh <machine1-username>@<machine1s ip>
root@localhost nishas]# ssh root@192.168.136.128
The authenticity of host '192.168.136.128 (192.168.136.128)' can't be established.
ECDSA key fingerprint is SHA256:d5Ak/w+f9UU/QnLjt3oQiaEYODI7/hcRlV/vaBIzad4.
Are you sure you want to continue connecting (yes/no/[fingerprint])? yes
Warning: Permanently added '192.168.136.128' (ECDSA) to the list of known hosts.
root@192.168.136.128's password: <enter your machine 1 password>
Permission denied, please try again.
Connection closed by 192.168.136.128 port 22
Install SSH on both the machines
sudo yum install openssh-server

Check the status of SSH in your machine 1
systemctl status sshd







This means it is running if its not running 
sudo systemctl start ssh →to start ssh

5.To enable SSH service on our system use command 
systemctl enable ssh → machine 1

6.See list of firewall in machine 1
firewall-cmd --list-all expalin 

7. Use this command to inform the firewall public zone, permanently allow traffic related to SSH (remote control) on my computer." It's a way to make sure you can always connect to your computer remotely using SSH, even after it restarts.. 
firewall-cmd --zone=public --permanent --add-service=ssh
8. To reload
firewall-cmd --reload
9.To set the connection with machine 2
ssh <machine1-username>@<machine1s ip>
[root@nisha-ThinkPad-T470 ~]# ssh root@192.168.136.128
The authenticity of host '192.168.136.128 (192.168.136.128)' can't be established.
ECDSA key fingerprint is SHA256:d5Ak/w+f9UU/QnLjt3oQiaEYODI7/hcRlV/vaBIzad4.
Are you sure you want to continue connecting (yes/no/[fingerprint])? yes
Warning: Permanently added '192.168.136.128' (ECDSA) to the list of known hosts.
root@192.168.136.128's password: 
Web console: https://nisha-ThinkPad-T470.localdomain:9090/ or https://192.168.136.128:9090/

Last login: Tue Jan  9 06:09:08 2024 from 192.168.136.129
[root@nisha-ThinkPad-T470 ~]# exit
logout
Connection to 192.168.136.128 closed.
To connect  to the remote server, add your public key to the authorized_keys file for the root user, and set up the necessary permissions. Afterward, you should be able to SSH into the remote server without entering a password, provided your private key is correctly configured on your local machine.

[root@nisha-ThinkPad-T470 ~]# ssh-copy-id root@192.168.136.129
/usr/bin/ssh-copy-id: ERROR: No identities found

ssh-keygen command, you are generating a pair of cryptographic keys: a public key and a private key.
Once the key generation is complete, you can use the generated keys for secure communication. The public key is placed on servers you want to access, and the private key stays on your local machine. This allows you to authenticate to remote systems without entering a password each time. It's a secure and convenient way to access servers using SSH
[root@nisha-ThinkPad-T470 ~]# ssh-keygen
Generating public/private rsa key pair.
(Click on Enter)
Enter file in which to save the key (/root/.ssh/id_rsa): 
Enter passphrase (empty for no passphrase): 
Enter same passphrase again: 
Your identification has been saved in /root/.ssh/id_rsa.
Your public key has been saved in /root/.ssh/id_rsa.pub.
The key fingerprint is:
SHA256:JClj7HiciMVxEuwWtFainEdwjcprNo8cDIV7AE5HVaA root@nisha-ThinkPad-T470
The key's randomart image is:
+---[RSA 3072]----+
|o*O**oo.         |
|*oOX.. .         |
|oO*E= o .        |
|o*=* + o         |
|+o+ =   S        |
| B .             |
|+ =              |
| o .             |
|                 |
+----[SHA256]-----+
The command ssh-copy-id root@192.168.136.129 is used to copy the public key of the local machine to the specified user's account on the remote server with the IP address 192.168.136.129. 

[root@nisha-ThinkPad-T470 ~]# ssh-copy-id root@192.168.136.129

/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/root/.ssh/id_rsa.pub"
The authenticity of host '192.168.136.129 (192.168.136.129)' can't be established.
ECDSA key fingerprint is SHA256:h6RkN1alq8ays+E00p3XFPVf6Y0RDQAjKkwWU7jbEvM.
Are you sure you want to continue connecting (yes/no/[fingerprint])? 
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
The authenticity of host '192.168.136.129 (192.168.136.129)' can't be established.
ECDSA key fingerprint is SHA256:h6RkN1alq8ays+E00p3XFPVf6Y0RDQAjKkwWU7jbEvM.
Are you sure you want to continue connecting (yes/no/[fingerprint])? yes
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys
root@192.168.136.129's password: 

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh 'root@192.168.136.129'"
and check to make sure that only the key(s) you wanted were added.


To check the connection

[root@nisha-ThinkPad-T470 ~]# ssh root@192.168.136.128
root@192.168.136.128's password: 
Web console: https://nisha-ThinkPad-T470.localdomain:9090/ or https://192.168.136.128:9090/

Last login: Tue Jan  9 06:38:02 2024 from 192.168.136.129
[root@nisha-ThinkPad-T470 ~]# 

